# This workflow will build a python project and publish it to the Viam module registry

name: Python

on:
  push:
  release:
    types: [published]
  pull_request_target:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        runner: [ ubuntu-latest ]
        arch: [ amd64, arm64 ]
    runs-on: ${{ matrix.runner }}
    env:
      os: 'linux'
      GOOS: 'linux'
      GOARCH: ${{ matrix.arch }}
    steps:
    - name: Check out code
      if: github.event_name != 'pull_request_target'
      uses: actions/checkout@v3

    - name: Check out PR branch code
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9' # Specify your Python version

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Assuming you have a requirements.txt file

    - name: Build/Package
      run: |
        tar -czf database-sensor-${{ env.os }}-${{ env.GOARCH }}.tar.gz run.sh requirements.txt src/  # Replace with your build command

    - uses: actions/upload-artifact@v3
      with:
        name: database-sensor-${{ env.os }}-${{ env.GOARCH }}
        path: database-sensor-${{ env.os }}-${{ env.GOARCH }}.tar.gz

  publish:
    strategy:
      matrix:
        runner: [ ubuntu-latest ]
        arch: [ amd64, arm64 ]
    runs-on: ubuntu-latest
    needs: [build]
    env:
      os: 'linux'
      GOOS: 'linux'
      GOARCH: ${{ matrix.arch }}
    if: github.event_name == 'release'
    steps:
    - name: Check out code
      if: github.event_name != 'pull_request_target'
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: database-sensor-${{ env.os }}-${{ env.GOARCH }}

    - name: Upload
      uses: viamrobotics/upload-module@main
      with:
        module-path: database-sensor-${{ env.os }}-${{ env.GOARCH }}.tar.gz
        platform: ${{ env.GOOS }}/${{ env.GOARCH }}
        org-id: ${{ secrets.viam_org_id }}
        version: ${{ github.event_name == 'release' && github.ref_name || format('0.0.0-{0}.{1}', github.ref_name, github.run_number) }} # <-- see 'Versioning' section below for explanation
        key-id: ${{ secrets.viam_key_id }}
        key-value: ${{ secrets.viam_key_value }}
